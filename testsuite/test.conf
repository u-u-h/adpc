def foo
  grammar ElMamun.lhs
  grammar RNAfold.lhs
  grammar Canon.lhs
  grammar AffineLocSim.lhs
  grammar pknotsrgnew.lhs
  grammar genTDM1.lhs
  grammar genTDM2.lhs
#  grammar genTDM3.lhs # parse error
  grammar Zuker.lhs
  grammar Fib.lhs
  grammar CanonicalRNAnoDangle.lhs
  grammar Wuchty98.lhs
  grammar sfold.lhs
  grammar TdmJens.lhs

# from jens, examples, where real constant factors are better in the
# locomotif-configurtation - the theoretical constant factors are
# better with the automatical approach, though
def loco_tab
  grammar loc2new.lhs
  grammar loc2_tdm.lhs
  grammar locomotif_tab.lhs

def el
  grammar ElMamun.lhs
    filename el.small.inp
      algebra count
      algebra buyer
      algebra seller

testsuite serial 'ADPC serialize part'
  class SerializeTest serializetest.py
    $foo
    $loco_tab
    grammar matcher1.lhs

testsuite tdesign 'Table Design Part'
  class TDesignTest tdesigntest.py
    $foo
    $loco_tab

testsuite grasp 'Table Design Grasp Part'
  class GraspTest tdesigntest.py
    $foo
    $loco_tab
    # too big for tdesign Test
    grammar matcher1.lhs

testsuite codegen 'Codegen part'
  class CodegenTest codegentest.py
   language C
     $el
   language java
     $el
   parameter -d 0
     language C
       $el
     language java
       $el
  class RnaTest codegentest.py
    grammar RNAfold.lhs
      filename rnafold.small.inp
        language java
        language C
      filename rna.150.inp
        language java
        language C
    parameter -e 0
      grammar RNAfold.lhs
        filename rna.350.inp
          language java
          language C
        filename rna.600.inp
          language java
          language C
        filename rna.1200.inp
          language java
          language C

testsuite cg 'Foo'
  class CodegenTest foo
    grammar Fib.lhs
      filename el.small.inp

testsuite tuple 'Codegen: tupel grammars'
  class TupleTest foo
    grammar sfold.lhs
      algebra mfe
        language C
          filename rnafold.small.inp
          filename rna.150.inp
        language java
          filename rnafold.small.inp
          filename rna.150.inp
      parameter -e 0
        algebra mfe
          language C
            filename rnafold.small.inp
            filename rna.150.inp
            filename rna.300.inp
            filename rna.600.inp
          language java
            filename rnafold.small.inp
            filename rna.150.inp
            filename rna.300.inp
            filename rna.600.inp

testsuite window 'Window Mode'
  class WindowTest foo
    grammar RNAfold.lhs
      parameter -w 25 -W 2
        filename rnafold.small.inp
          language java
          language C
  # Eingabe und Parameter aus altem Bug-Report von Jens Reeder
  # (abgeschnittete Strukturstrings, leere Kandidatenlisten ...)
  # seit Anfang 2007 mindestens aber schon gefixt
  class WindowTest foo
    language C
      grammar TdmJens.lhs
        filename tdm.149.inp
          parameter -W 10 -w 70
          parameter -e 0 -W 10 -w 70
    language java
      grammar TdmJens.lhs
        filename tdm.149.inp
          parameter -W 10 -w 70
          parameter -e 0 -W 10 -w 70
  # Ende

testsuite small 'Codegen part'
  class CodegenTest codegentest.py
#    grammar ElMamun.lhs
#      language java
#        filename el.small.inp
#          algebra count
#          algebra buyer
#          algebra seller
#          @parameter -d 0
#  class RnaTest codegentest.py
#    grammar RNAfold.lhs
#      filename rnafold.small.inp
#         language java
#         language C
   parameter -d 0
     language C
       $el
     language java
       $el

testsuite loco 'Codegen locomotif'
  class CodegenTest codegentest.py
    filename rna.1200.inp
      language C
        $loco_tab

default codegen serial tdesign grasp tuple window

#default serial codegen
#default tdesign

