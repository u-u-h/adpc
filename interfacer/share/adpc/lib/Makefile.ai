OS := $(shell uname -s)

# project: @PROJECT_NAME@ ==================================================================
PROGNAME    = @PROJECT_NAME@
# adpc base ============================================================================
PREFIX      = @MAKE_PREFIX@

# compiler and linker flags ============================================================

ifeq ($(OS),SunOS)
LDFLAGS_EXTRA = -R/vol/gnu/lib -L/vol/gnu/lib -lcurses
endif

# LDFLAGS = -R/vol/gnu/lib -L/vol/gnu/lib
# CC = purify gcc -g
CC = gcc

# modules generated by adpc ============================================================
ADPCMODULES = @MAKE_ADPCMODULES_C@

# some paths ===========================================================================
BINPATH    = $(PREFIX)/bin
PACKPATH   = $(PREFIX)/share/adpc/lib/distr
ADPC       = $(BINPATH)/adpc
ADPCOMPILE = $(BINPATH)/adpcompile
GENMAN     = $(BINPATH)/man2c
SHARELIB   = $(PREFIX)/share/adpc/src

CFLAGS = -Wall -O2
CPPFLAGS = -I $(PREFIX)/share/adpc/src -I.

# standard target: binary ==============================================================
all: $(PROGNAME) # manual
	echo "No problems detected. Type ./@PROJECT_NAME@ to start." 

adplib.o: $(SHARELIB)/adplib.c config.h options.h
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $(SHARELIB)/adplib.c

rnalib.o: $(SHARELIB)/rnalib.c options.h
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $(SHARELIB)/rnalib.c

RNALIB  = @MAKE_RNALIB_OBJECT@ 
LIBFLAG = @MAKE_LIBFLAG@

$(PROGNAME).o: config.h $(PROGNAME)-man.c $(PROGNAME).c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $(PROGNAME).c

# targets for adpc =====================================================================
# ======================================================================================

@MAKE_ADPCTARGETS@

# interface definition: @PROJECT_NAME@.xml =================================================
$(PROGNAME).xml: # (no dependencies)                 
	$(ADPC) $(LIBFLAG) $(PROGNAME).lhs


# Main C Module: @PROJECT_NAME@.c ==========================================================
$(PROGNAME).c config.h options.h $(PROGNAME).pod $(PROGNAME).sed : $(PROGNAME).xml $(PROGNAME).lhs 
	$(ADPC) $(LIBFLAG) $(PROGNAME).xml


# linking it all together: @PROJECT_NAME@ ==================================================
$(PROGNAME): $(PROGNAME).o @MAKE_ADPCMODULES_O@ adplib.o $(RNALIB) 
	$(CC) $(LDFLAGS) $(PROGNAME).o adplib.o $(RNALIB) \
              @MAKE_ADPCMODULES_O@ $(LDFLAGS_EXTRA) -lreadline -lm -o $(PROGNAME) 

# man-page and manual ====== ===============================================================
$(PROGNAME).1: $(PROGNAME).pod
	pod2man -c $(PROGNAME) -r $(PROGNAME) -q '<>' $(PROGNAME).pod  > $(PROGNAME).1

$(PROGNAME).tex: $(PROGNAME).pod
	pod2latex $(PROGNAME).pod

$(PROGNAME).pdf: $(PROGNAME).tex
	pdflatex $(PROGNAME).tex
	pdflatex $(PROGNAME).tex

$(PROGNAME).dvi: $(PROGNAME).tex
	latex $(PROGNAME).tex
	latex $(PROGNAME).tex

$(PROGNAME).ps: $(PROGNAME).dvi
	dvips $(PROGNAME).dvi -o $(PROGNAME).ps

$(PROGNAME).2.ps: $(PROGNAME).ps
	psnup -n 2 $(PROGNAME).ps $(PROGNAME).2.ps

manual: $(PROGNAME).1 $(PROGNAME).pdf $(PROGNAME).ps $(PROGNAME).2.ps

# temporary .txt file for interactive help mode generation: @PROJECT_NAME@.txt =============
$(PROGNAME).txt: $(PROGNAME).pod
	pod2text -q '<>' $(PROGNAME).pod > $(PROGNAME).txt

# interactive help mode (-H): @PROJECT_NAME@-man.c =========================================
$(PROGNAME)-man.c: $(PROGNAME).txt
	$(GENMAN) '1' $(PROGNAME).txt $(PROGNAME)-man.c

# clean up =============================================================================
clean: 
	rm -f $(PROGNAME) $(PROGNAME).1 $(PROGNAME).c $(PROGNAME)-man.c $(PROGNAME).txt \
           $(PROGNAME).pod $(PROGNAME).o $(PROGNAME)-distr config.h \
           Makefile adplib.c adplib.o $(RNALIB) options.h  \
           algebras.txt choicefcts.txt energy.txt $(PROGNAME).author \
           $(ADPCMODULES) $(ADPCMODULES:.c=.o) $(ADPCMODULES:.c=.adpc)  \
           $(ADPCMODULES:.c=.sed) \
           $(PROGNAME).h $(PROGNAME).xml $(PROGNAME).sed \
           $(PROGNAME).tex $(PROGNAME).pdf $(PROGNAME).dvi $(PROGNAME).ps \
           $(PROGNAME).2.ps \
           $(PROGNAME).aux $(PROGNAME).log

# start from scratch ===================================================================
cleanall: clean
	  rm -rf $(PROGNAME).xml 

# update interfacer libs ===============================================================
update: cleanall
	$(ADPC) $(LIBFLAG) $(PROGNAME).lhs
	make


# make distribution: ===================================================================
DISTFILES = src/Makefile.am man/Makefile.am configure.ac Makefile.am README COPYING AUTHORS examples/Makefile.am

packagedir:
	cp -a $(PACKPATH)/ $(PROGNAME)-distr

$(DISTFILES): packagedir $(PROGNAME).sed
	sed -f $(PROGNAME).sed <$(PROGNAME)-distr/$@ > adpc_sed_temp
	mv adpc_sed_temp $(PROGNAME)-distr/$@

distdir:  $(DISTFILES) $(PROGNAME).c $(PROGNAME)-man.c $(PROGNAME).1
	cp $(PROGNAME).c $(PROGNAME)-distr/src
	cp $(PROGNAME).h $(PROGNAME)-distr/src
	cp $(PROGNAME)-man.c $(PROGNAME)-distr/src
	cp $(ADPCMODULES) $(PROGNAME)-distr/src
	cp options.h $(PROGNAME)-distr/src
	cp $(PROGNAME).1 $(PROGNAME)-distr/man
	cp $(PROGNAME).pdf $(PROGNAME)-distr/

dist-gzip: distdir
	cd $(PROGNAME)-distr/ ; autoheader ; aclocal ; autoconf ; automake -a -i --foreign 
	cd $(PROGNAME)-distr/ ; ./configure
	cd $(PROGNAME)-distr/ ; make dist-gzip
	mv $(PROGNAME)-distr/*.tar.gz .
	rm -rf $(PROGNAME)-distr/
